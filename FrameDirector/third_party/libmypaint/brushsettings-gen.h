// DO NOT EDIT - autogenerated by generate.py

#ifndef BRUSHSETTINGS_GEN_H
#define BRUSHSETTINGS_GEN_H
static MyPaintBrushSettingInfo settings_info_array[] = {
    {"opaque", /* Brush setting */ N_("Opacity"), FALSE, 0.0, 1.0, 2.0, /* Tooltip for the "Opacity" brush setting */ N_("0 means brush is transparent, 1 fully visible\n(also known as alpha or opacity)")}, 
    {"opaque_multiply", /* Brush setting */ N_("Opacity multiply"), FALSE, 0.0, 0.0, 2.0, /* Tooltip for the "Opacity multiply" brush setting */ N_("This gets multiplied with opaque. You should only change the pressure input of this setting. Use 'opaque' instead to make opacity depend on speed.\nThis setting is responsible to stop painting when there is zero pressure. This is just a convention, the behaviour is identical to 'opaque'.")}, 
    {"opaque_linearize", /* Brush setting */ N_("Opacity linearize"), TRUE, 0.0, 0.9, 2.0, /* Tooltip for the "Opacity linearize" brush setting */ N_("Correct the nonlinearity introduced by blending multiple dabs on top of each other. This correction should get you a linear (\"natural\") pressure response when pressure is mapped to opaque_multiply, as it is usually done. 0.9 is good for standard strokes, set it smaller if your brush scatters a lot, or higher if you use dabs_per_second.\n0.0 the opaque value above is for the individual dabs\n1.0 the opaque value above is for the final brush stroke, assuming each pixel gets (dabs_per_radius*2) brushdabs on average during a stroke")}, 
    {"radius_logarithmic", /* Brush setting */ N_("Radius"), FALSE, -2.0, 2.0, 6.0, /* Tooltip for the "Radius" brush setting */ N_("Basic brush radius (logarithmic)\n 0.7 means 2 pixels\n 3.0 means 20 pixels")}, 
    {"hardness", /* Brush setting */ N_("Hardness"), FALSE, 0.0, 0.8, 1.0, /* Tooltip for the "Hardness" brush setting */ N_("Hard brush-circle borders (setting to zero will draw nothing). To reach the maximum hardness, you need to disable Pixel feather.")}, 
    {"anti_aliasing", /* Brush setting */ N_("Pixel feather"), FALSE, 0.0, 1.0, 5.0, /* Tooltip for the "Pixel feather" brush setting */ N_("This setting decreases the hardness when necessary to prevent a pixel staircase effect (aliasing) by making the dab more blurred.\n 0.0 disable (for very strong erasers and pixel brushes)\n 1.0 blur one pixel (good value)\n 5.0 notable blur, thin strokes will disappear")}, 
    {"dabs_per_basic_radius", /* Brush setting */ N_("Dabs per basic radius"), FALSE, 0.0, 0.0, 200.0, /* Tooltip for the "Dabs per basic radius" brush setting */ N_("How many dabs to draw while the pointer moves a distance of one brush radius (more precise: the base value of the radius)")}, 
    {"dabs_per_actual_radius", /* Brush setting */ N_("Dabs per actual radius"), FALSE, 0.0, 2.0, 200.0, /* Tooltip for the "Dabs per actual radius" brush setting */ N_("Same as above, but the radius actually drawn is used, which can change dynamically")}, 
    {"dabs_per_second", /* Brush setting */ N_("Dabs per second"), FALSE, 0.0, 0.0, 200.0, /* Tooltip for the "Dabs per second" brush setting */ N_("Dabs to draw each second, no matter how far the pointer moves")}, 
    {"radius_by_random", /* Brush setting */ N_("Radius by random"), FALSE, 0.0, 0.0, 1.5, /* Tooltip for the "Radius by random" brush setting */ N_("Alter the radius randomly each dab. You can also do this with the by_random input on the radius setting. If you do it here, there are two differences:\n1) the opaque value will be corrected such that a big-radius dabs is more transparent\n2) it will not change the actual radius seen by dabs_per_actual_radius")}, 
    {"speed1_slowness", /* Brush setting */ N_("Fine speed filter"), FALSE, 0.0, 0.04, 0.2, /* Tooltip for the "Fine speed filter" brush setting */ N_("How slow the input fine speed is following the real speed\n0.0 change immediately as your speed changes (not recommended, but try it)")}, 
    {"speed2_slowness", /* Brush setting */ N_("Gross speed filter"), FALSE, 0.0, 0.8, 3.0, /* Tooltip for the "Gross speed filter" brush setting */ N_("Same as 'fine speed filter', but note that the range is different")}, 
    {"speed1_gamma", /* Brush setting */ N_("Fine speed gamma"), TRUE, -8.0, 4.0, 8.0, /* Tooltip for the "Fine speed gamma" brush setting */ N_("This changes the reaction of the 'fine speed' input to extreme physical speed. You will see the difference best if 'fine speed' is mapped to the radius.\n-8.0 very fast speed does not increase 'fine speed' much more\n+8.0 very fast speed increases 'fine speed' a lot\nFor very slow speed the opposite happens.")}, 
    {"speed2_gamma", /* Brush setting */ N_("Gross speed gamma"), TRUE, -8.0, 4.0, 8.0, /* Tooltip for the "Gross speed gamma" brush setting */ N_("Same as 'fine speed gamma' for gross speed")}, 
    {"offset_by_random", /* Brush setting */ N_("Jitter"), FALSE, 0.0, 0.0, 25.0, /* Tooltip for the "Jitter" brush setting */ N_("Add a random offset to the position where each dab is drawn\n 0.0 disabled\n 1.0 standard deviation is one basic radius away\n<0.0 negative values produce no jitter")}, 
    {"offset_by_speed", /* Brush setting */ N_("Offset by speed"), FALSE, -3.0, 0.0, 3.0, /* Tooltip for the "Offset by speed" brush setting */ N_("Change position depending on pointer speed\n= 0 disable\n> 0 draw where the pointer moves to\n< 0 draw where the pointer comes from")}, 
    {"offset_by_speed_slowness", /* Brush setting */ N_("Offset by speed filter"), FALSE, 0.0, 1.0, 15.0, /* Tooltip for the "Offset by speed filter" brush setting */ N_("How slow the offset goes back to zero when the cursor stops moving")}, 
    {"slow_tracking", /* Brush setting */ N_("Slow position tracking"), TRUE, 0.0, 0.0, 10.0, /* Tooltip for the "Slow position tracking" brush setting */ N_("Slowdown pointer tracking speed. 0 disables it, higher values remove more jitter in cursor movements. Useful for drawing smooth, comic-like outlines.")}, 
    {"slow_tracking_per_dab", /* Brush setting */ N_("Slow tracking per dab"), FALSE, 0.0, 0.0, 10.0, /* Tooltip for the "Slow tracking per dab" brush setting */ N_("Similar as above but at brushdab level (ignoring how much time has passed if brushdabs do not depend on time)")}, 
    {"tracking_noise", /* Brush setting */ N_("Tracking noise"), TRUE, 0.0, 0.0, 12.0, /* Tooltip for the "Tracking noise" brush setting */ N_("Add randomness to the mouse pointer; this usually generates many small lines in random directions; maybe try this together with 'slow tracking'")}, 
    {"color_h", /* Brush setting */ N_("Color hue"), TRUE, 0.0, 0.0, 1.0, /* Tooltip for the "Color hue" brush setting */ N_("Color hue")}, 
    {"color_s", /* Brush setting */ N_("Color saturation"), TRUE, -0.5, 0.0, 1.5, /* Tooltip for the "Color saturation" brush setting */ N_("Color saturation")}, 
    {"color_v", /* Brush setting */ N_("Color value"), TRUE, -0.5, 0.0, 1.5, /* Tooltip for the "Color value" brush setting */ N_("Color value (brightness, intensity)")}, 
    {"restore_color", /* Brush setting */ N_("Save color"), TRUE, 0.0, 0.0, 1.0, /* Tooltip for the "Save color" brush setting */ N_("When selecting a brush, the color can be restored to the color that the brush was saved with.\n 0.0 do not modify the active color when selecting this brush\n 0.5 change active color towards brush color\n 1.0 set the active color to the brush color when selected")}, 
    {"change_color_h", /* Brush setting */ N_("Change color hue"), FALSE, -2.0, 0.0, 2.0, /* Tooltip for the "Change color hue" brush setting */ N_("Change color hue.\n-0.1 small clockwise color hue shift\n 0.0 disable\n 0.5 counterclockwise hue shift by 180 degrees")}, 
    {"change_color_l", /* Brush setting */ N_("Change color lightness (HSL)"), FALSE, -2.0, 0.0, 2.0, /* Tooltip for the "Change color lightness (HSL)" brush setting */ N_("Change the color lightness using the HSL color model.\n-1.0 blacker\n 0.0 disable\n 1.0 whiter")}, 
    {"change_color_hsl_s", /* Brush setting */ N_("Change color satur. (HSL)"), FALSE, -2.0, 0.0, 2.0, /* Tooltip for the "Change color satur. (HSL)" brush setting */ N_("Change the color saturation using the HSL color model.\n-1.0 more grayish\n 0.0 disable\n 1.0 more saturated")}, 
    {"change_color_v", /* Brush setting */ N_("Change color value (HSV)"), FALSE, -2.0, 0.0, 2.0, /* Tooltip for the "Change color value (HSV)" brush setting */ N_("Change the color value (brightness, intensity) using the HSV color model. HSV changes are applied before HSL.\n-1.0 darker\n 0.0 disable\n 1.0 brigher")}, 
    {"change_color_hsv_s", /* Brush setting */ N_("Change color satur. (HSV)"), FALSE, -2.0, 0.0, 2.0, /* Tooltip for the "Change color satur. (HSV)" brush setting */ N_("Change the color saturation using the HSV color model. HSV changes are applied before HSL.\n-1.0 more grayish\n 0.0 disable\n 1.0 more saturated")}, 
    {"smudge", /* Brush setting */ N_("Smudge"), FALSE, 0.0, 0.0, 1.0, /* Tooltip for the "Smudge" brush setting */ N_("Paint with the smudge color instead of the brush color. The smudge color is slowly changed to the color you are painting on.\n 0.0 do not use the smudge color\n 0.5 mix the smudge color with the brush color\n 1.0 use only the smudge color")}, 
    {"smudge_length", /* Brush setting */ N_("Smudge length"), FALSE, 0.0, 0.5, 1.0, /* Tooltip for the "Smudge length" brush setting */ N_("This controls how fast the smudge color becomes the color you are painting on.\n0.0 immediately update the smudge color (requires more CPU cycles because of the frequent color checks)\n0.5 change the smudge color steadily towards the canvas color\n1.0 never change the smudge color")}, 
    {"smudge_radius_log", /* Brush setting */ N_("Smudge radius"), FALSE, -1.6, 0.0, 1.6, /* Tooltip for the "Smudge radius" brush setting */ N_("This modifies the radius of the circle where color is picked up for smudging.\n 0.0 use the brush radius\n-0.7 half the brush radius (fast, but not always intuitive)\n+0.7 twice the brush radius\n+1.6 five times the brush radius (slow performance)")}, 
    {"eraser", /* Brush setting */ N_("Eraser"), FALSE, 0.0, 0.0, 1.0, /* Tooltip for the "Eraser" brush setting */ N_("how much this tool behaves like an eraser\n 0.0 normal painting\n 1.0 standard eraser\n 0.5 pixels go towards 50% transparency")}, 
    {"stroke_threshold", /* Brush setting */ N_("Stroke threshold"), TRUE, 0.0, 0.0, 0.5, /* Tooltip for the "Stroke threshold" brush setting */ N_("How much pressure is needed to start a stroke. This affects the stroke input only. MyPaint does not need a minimum pressure to start drawing.")}, 
    {"stroke_duration_logarithmic", /* Brush setting */ N_("Stroke duration"), FALSE, -1.0, 4.0, 14.0, /* Tooltip for the "Stroke duration" brush setting */ N_("How far you have to move until the stroke input reaches 1.0. This value is logarithmic (negative values will not invert the process).")}, 
    {"stroke_holdtime", /* Brush setting */ N_("Stroke hold time"), FALSE, 0.0, 0.0, 10.0, /* Tooltip for the "Stroke hold time" brush setting */ N_("This defines how long the stroke input stays at 1.0. After that it will reset to 0.0 and start growing again, even if the stroke is not yet finished.\n2.0 means twice as long as it takes to go from 0.0 to 1.0\n9.9 or higher stands for infinite")}, 
    {"custom_input", /* Brush setting */ N_("Custom input"), FALSE, -5.0, 0.0, 5.0, /* Tooltip for the "Custom input" brush setting */ N_("Set the custom input to this value. If it is slowed down, move it towards this value (see below). The idea is that you make this input depend on a mixture of pressure/speed/whatever, and then make other settings depend on this 'custom input' instead of repeating this combination everywhere you need it.\nIf you make it change 'by random' you can generate a slow (smooth) random input.")}, 
    {"custom_input_slowness", /* Brush setting */ N_("Custom input filter"), FALSE, 0.0, 0.0, 10.0, /* Tooltip for the "Custom input filter" brush setting */ N_("How slow the custom input actually follows the desired value (the one above). This happens at brushdab level (ignoring how much time has passed, if brushdabs do not depend on time).\n0.0 no slowdown (changes apply instantly)")}, 
    {"elliptical_dab_ratio", /* Brush setting */ N_("Elliptical dab: ratio"), FALSE, 1.0, 1.0, 10.0, /* Tooltip for the "Elliptical dab: ratio" brush setting */ N_("Aspect ratio of the dabs; must be >= 1.0, where 1.0 means a perfectly round dab.")}, 
    {"elliptical_dab_angle", /* Brush setting */ N_("Elliptical dab: angle"), FALSE, 0.0, 90.0, 180.0, /* Tooltip for the "Elliptical dab: angle" brush setting */ N_("Angle by which elliptical dabs are tilted\n 0.0 horizontal dabs\n 45.0 45 degrees, turned clockwise\n 180.0 horizontal again")}, 
    {"direction_filter", /* Brush setting */ N_("Direction filter"), FALSE, 0.0, 2.0, 10.0, /* Tooltip for the "Direction filter" brush setting */ N_("A low value will make the direction input adapt more quickly, a high value will make it smoother")}, 
    {"lock_alpha", /* Brush setting */ N_("Lock alpha"), FALSE, 0.0, 0.0, 1.0, /* Tooltip for the "Lock alpha" brush setting */ N_("Do not modify the alpha channel of the layer (paint only where there is paint already)\n 0.0 normal painting\n 0.5 half of the paint gets applied normally\n 1.0 alpha channel fully locked")}, 
    {"colorize", /* Brush setting */ N_("Colorize"), FALSE, 0.0, 0.0, 1.0, /* Tooltip for the "Colorize" brush setting */ N_("Colorize the target layer, setting its hue and saturation from the active brush color while retaining its value and alpha.")}, 
    {"snap_to_pixel", /* Brush setting */ N_("Snap to pixel"), FALSE, 0.0, 0.0, 1.0, /* Tooltip for the "Snap to pixel" brush setting */ N_("Snap brush dab's center and its radius to pixels. Set this to 1.0 for a thin pixel brush.")}, 
    {"pressure_gain_log", /* Brush setting */ N_("Pressure gain"), TRUE, -1.8, 0.0, 1.8, /* Tooltip for the "Pressure gain" brush setting */ N_("This changes how hard you have to press. It multiplies tablet pressure by a constant factor.")}, 
    {"gridmap_scale", /* Brush setting */ N_("GridMap Scale"), FALSE, -10.0, 0.0, 10.0, /* Tooltip for the "GridMap Scale" brush setting */ N_("Changes the overall scale that the GridMap brush input operates on.\nLogarithmic (same scale as brush radius).\nA scale of 0 will make the grid 256x256 pixels.")}, 
    {"gridmap_scale_x", /* Brush setting */ N_("GridMap Scale X"), FALSE, 0.0, 1.0, 10.0, /* Tooltip for the "GridMap Scale X" brush setting */ N_("Changes the scale that the GridMap brush input operates on - affects X axis only.\nThe range is 0-5x.\nThis allows you to stretch or compress the GridMap pattern.")}, 
    {"gridmap_scale_y", /* Brush setting */ N_("GridMap Scale Y"), FALSE, 0.0, 1.0, 10.0, /* Tooltip for the "GridMap Scale Y" brush setting */ N_("Changes the scale that the GridMap brush input operates on - affects Y axis only.\nThe range is 0-5x.\nThis allows you to stretch or compress the GridMap pattern.")}, 
    {"smudge_length_log", /* Brush setting */ N_("Smudge length multiplier"), FALSE, 0.0, 0.0, 20.0, /* Tooltip for the "Smudge length multiplier" brush setting */ N_("Logarithmic multiplier for the \"Smudge length\" value.\nUseful to correct for high-definition/large brushes with lots of dabs.\nThe longer the smudge length the more a color will spread and will also boost performance dramatically, as the canvas is sampled less often")}, 
    {"smudge_bucket", /* Brush setting */ N_("Smudge bucket"), FALSE, 0.0, 0.0, 255.0, /* Tooltip for the "Smudge bucket" brush setting */ N_("There are 256 buckets that each can hold a color picked up from the canvas.\nYou can control which bucket to use to improve variability and realism of the brush.\nEspecially useful with the \"Custom input\" setting to correlate buckets with other settings such as offsets.")}, 
    {"smudge_transparency", /* Brush setting */ N_("Smudge transparency"), FALSE, -1.0, 0.0, 1.0, /* Tooltip for the "Smudge transparency" brush setting */ N_("Control how much transparency is picked up and smudged, similar to lock alpha.\n1.0 will not move any transparency.\n0.5 will move only 50% transparency and above.\n0.0 will have no effect.\nNegative values do the reverse")}, 
    {"offset_y", /* Brush setting */ N_("Offset Y"), FALSE, -40.0, 0.0, 40.0, /* Tooltip for the "Offset Y" brush setting */ N_("Moves the dabs up or down based on canvas coordinates.")}, 
    {"offset_x", /* Brush setting */ N_("Offset X"), FALSE, -40.0, 0.0, 40.0, /* Tooltip for the "Offset X" brush setting */ N_("Moves the dabs left or right based on canvas coordinates.")}, 
    {"offset_angle", /* Brush setting */ N_("Angular Offset: Direction"), FALSE, -40.0, 0.0, 40.0, /* Tooltip for the "Angular Offset: Direction" brush setting */ N_("Follows the stroke direction to offset the dabs to one side.")}, 
    {"offset_angle_asc", /* Brush setting */ N_("Angular Offset: Ascension"), FALSE, -40.0, 0.0, 40.0, /* Tooltip for the "Angular Offset: Ascension" brush setting */ N_("Follows the tilt direction to offset the dabs to one side. Requires Tilt.")}, 
    {"offset_angle_view", /* Brush setting */ N_("Angular Offset: View"), FALSE, -40.0, 0.0, 40.0, /* Tooltip for the "Angular Offset: View" brush setting */ N_("Follows the view orientation to offset the dabs to one side.")}, 
    {"offset_angle_2", /* Brush setting */ N_("Angular Offset Mirrored: Direction"), FALSE, 0.0, 0.0, 40.0, /* Tooltip for the "Angular Offset Mirrored: Direction" brush setting */ N_("Follows the stroke direction to offset the dabs, but to both sides of the stroke.")}, 
    {"offset_angle_2_asc", /* Brush setting */ N_("Angular Offset Mirrored: Ascension"), FALSE, 0.0, 0.0, 40.0, /* Tooltip for the "Angular Offset Mirrored: Ascension" brush setting */ N_("Follows the tilt direction to offset the dabs, but to both sides of the stroke. Requires Tilt.")}, 
    {"offset_angle_2_view", /* Brush setting */ N_("Angular Offset Mirrored: View"), FALSE, 0.0, 0.0, 40.0, /* Tooltip for the "Angular Offset Mirrored: View" brush setting */ N_("Follows the view orientation to offset the dabs, but to both sides of the stroke.")}, 
    {"offset_angle_adj", /* Brush setting */ N_("Angular Offsets Adjustment"), FALSE, -180.0, 0.0, 180.0, /* Tooltip for the "Angular Offsets Adjustment" brush setting */ N_("Change the Angular Offset angle from the default, which is 90 degrees.")}, 
    {"offset_multiplier", /* Brush setting */ N_("Offsets Multiplier"), FALSE, -2.0, 0.0, 3.0, /* Tooltip for the "Offsets Multiplier" brush setting */ N_("Logarithmic multiplier for X, Y, and Angular Offset settings.")}, 
    {"posterize", /* Brush setting */ N_("Posterize"), FALSE, 0.0, 0.0, 1.0, /* Tooltip for the "Posterize" brush setting */ N_("Strength of posterization, reducing number of colors based on the \"Posterization levels\" setting, while retaining alpha.")}, 
    {"posterize_num", /* Brush setting */ N_("Posterization levels"), FALSE, 0.01, 0.05, 1.28, /* Tooltip for the "Posterization levels" brush setting */ N_("Number of posterization levels (divided by 100).\n0.05 = 5 levels, 0.2 = 20 levels, etc.\nValues above 0.5 may not be noticeable.")}, 
    {"paint_mode", /* Brush setting - The name Pigment refers to the fact that this kind of color mixing is more similar to how colors mix in physical paint. */ N_("Pigment"), FALSE, 0.0, 1.0, 1.0, /* Tooltip for the "Pigment" brush setting - If this string is difficult to translate, feel free to change it to something more descriptive. Just try to be succinct and consistent. */ N_("Subtractive spectral color mixing mode.\n0.0 no spectral mixing\n1.0 only spectral mixing")}, 

};

static MyPaintBrushInputInfo inputs_info_array[] = {
    {"pressure", 0.0, 0.0, 0.4, 1.0, FLT_MAX, /* Brush input */ N_("Pressure"), /* Tooltip for the "Pressure" brush input */ N_("The pressure reported by the tablet. Usually between 0.0 and 1.0, but it may get larger when a pressure gain is used. If you use the mouse, it will be 0.5 when a button is pressed and 0.0 otherwise.")}, 
    {"speed1", -FLT_MAX, 0.0, 0.5, 4.0, FLT_MAX, /* Brush input - "fine" refers to the accuracy and update frequency of the speed value, as in "fine grained" */ N_("Fine speed"), /* Tooltip for the "Fine speed" brush input */ N_("How fast you currently move. This can change very quickly. Try 'print input values' from the 'help' menu to get a feeling for the range; negative values are rare but possible for very low speed.")}, 
    {"speed2", -FLT_MAX, 0.0, 0.5, 4.0, FLT_MAX, /* Brush input - changes more smoothly but is less accurate than "Fine speed" */ N_("Gross speed"), /* Tooltip for the "Gross speed" brush input */ N_("Same as fine speed, but changes slower. Also look at the 'gross speed filter' setting.")}, 
    {"random", 0.0, 0.0, 0.5, 1.0, 1.0, /* Brush input */ N_("Random"), /* Tooltip for the "Random" brush input */ N_("Fast random noise, changing at each evaluation. Evenly distributed between 0 and 1.")}, 
    {"stroke", 0.0, 0.0, 0.5, 1.0, 1.0, /* Brush input */ N_("Stroke"), /* Tooltip for the "Stroke" brush input */ N_("This input slowly goes from zero to one while you draw a stroke. It can also be configured to jump back to zero periodically while you move. Look at the 'stroke duration' and 'stroke hold time' settings.")}, 
    {"direction", 0.0, 0.0, 0.0, 180.0, 180.0, /* Brush input */ N_("Direction"), /* Tooltip for the "Direction" brush input */ N_("The angle of the stroke, in degrees. The value will stay between 0.0 and 180.0, effectively ignoring turns of 180 degrees.")}, 
    {"tilt_declination", 0.0, 0.0, 0.0, 90.0, 90.0, /* Brush input */ N_("Declination/Tilt"), /* Tooltip for the "Declination/Tilt" brush input */ N_("Declination of stylus tilt. 0 when stylus is parallel to tablet and 90.0 when it's perpendicular to tablet.")}, 
    {"tilt_ascension", -180.0, -180.0, 0.0, 180.0, 180.0, /* Brush input */ N_("Ascension"), /* Tooltip for the "Ascension" brush input */ N_("Right ascension of stylus tilt. 0 when stylus working end points to you, +90 when rotated 90 degrees clockwise, -90 when rotated 90 degrees counterclockwise.")}, 
    {"custom", -FLT_MAX, -10.0, 0.0, 10.0, FLT_MAX, /* Brush input - the input is the output of the "Custom input" setting */ N_("Custom"), /* Tooltip for the "Custom" brush input */ N_("This is a user defined input. Look at the 'custom input' setting for details.")}, 
    {"direction_angle", 0.0, 0.0, 0.0, 360.0, 360.0, /* Brush input - refers to the direction of the stroke */ N_("Direction 360"), /* Tooltip for the "Direction 360" brush input */ N_("The angle of the stroke, from 0 to 360 degrees.")}, 
    {"attack_angle", -180.0, -180.0, 0.0, 180.0, 180.0, /* Brush input */ N_("Attack Angle"), /* Tooltip for the "Attack Angle" brush input */ N_("The difference, in degrees, between the angle the stylus is pointing and the angle of the stroke movement.\nThe range is +/-180.0.\n0.0 means the stroke angle corresponds to the angle of the stylus.\n90 means the stroke angle is perpendicular to the angle of the stylus.\n180 means the angle of the stroke is directly opposite the angle of the stylus.")}, 
    {"tilt_declinationx", -90.0, -90.0, 0.0, 90.0, 90.0, /* Brush input */ N_("Declination/Tilt X"), /* Tooltip for the "Declination/Tilt X" brush input */ N_("Declination of stylus tilt on X-Axis. 90/-90 when stylus is parallel to tablet and 0 when it's perpendicular to tablet.")}, 
    {"tilt_declinationy", -90.0, -90.0, 0.0, 90.0, 90.0, /* Brush input */ N_("Declination/Tilt Y"), /* Tooltip for the "Declination/Tilt Y" brush input */ N_("Declination of stylus tilt on Y-Axis. 90/-90 when stylus is parallel to tablet and 0 when it's perpendicular to tablet.")}, 
    {"gridmap_x", 0, 0.0, 0.0, 256.0, 256.0, /* Brush input */ N_("GridMap X"), /* Tooltip for the "GridMap X" brush input */ N_("The X coordinate on a 256 pixel grid. This will wrap around 0-256 as the cursor is moved on the X axis. Similar to \"Stroke\". Can be used to add paper texture by modifying opacity, etc.\nThe brush size should be considerably smaller than the grid scale for best results.")}, 
    {"gridmap_y", 0, 0.0, 0.0, 256.0, 256.0, /* Brush input */ N_("GridMap Y"), /* Tooltip for the "GridMap Y" brush input */ N_("The Y coordinate on a 256 pixel grid. This will wrap around 0-256 as the cursor is moved on the Y axis. Similar to \"Stroke\". Can be used to add paper texture by modifying opacity, etc.\nThe brush size should be considerably smaller than the grid scale for best results.")}, 
    {"viewzoom", -2.77, -2.77, 0.0, 4.15, 4.15, /* Brush input - refers to canvas zoom */ N_("Zoom Level"), /* Tooltip for the "Zoom Level" brush input */ N_("The current zoom level of the canvas view.\nLogarithmic: 0.0 is 100%, 0.69 is 200%, -1.38 is 25%\nFor the Radius setting, using a value of -4.15 makes the brush size roughly constant, relative to the level of zoom.")}, 
    {"barrel_rotation", -180.0, -180.0, 0.0, 180.0, 180.0, /* Brush input */ N_("Barrel Rotation"), /* Tooltip for the "Barrel Rotation" brush input */ N_("Barrel rotation of stylus.\n0 when not twisted\n+90 when twisted clockwise 90 degrees\n-90 when twisted counterclockwise 90 degrees")}, 
    {"brush_radius", -2.0, -2.0, 0.0, 6.0, 6.0, /* Brush input */ N_("Base Brush Radius"), /* Tooltip for the "Base Brush Radius" brush input */ N_("The base brush radius allows you to change the behavior of a brush as you make it bigger or smaller.\nYou can even cancel out dab size increase and adjust something else to make a brush bigger.\nTake note of \"Dabs per basic radius\" and \"Dabs per actual radius\", which behave much differently.")}, 

};

#endif
